.timeline-container {
  /* background-color: #f9f9f9; */ /* Removed for unified gradient */
  /* box-shadow: 0 4px 20px rgba(0,0,0,0.08); */ /* Removed for unified gradient */
  /* border-radius: 0.75rem; */ /* Removed for unified gradient */
  position: relative; /* Keep for absolute positioning of children */
  height: 13.6rem; /* Adjusted from 14.4rem */
  overflow: hidden; /* Keep */
  color: #2c2517; /* Dark brown text for contrast */
  box-shadow: 0 3px 15px rgba(0, 0, 0, 0.2);
  border-radius: 10px;
}

.timeline-title {
  font-family: 'Roboto Flex', sans-serif;
  font-weight: 300;
  fill: #666; /* Match baseline color */
  opacity: 0.8; /* Match baseline opacity */
  font-size: 10px; /* As per existing SVG text */

}

.timeline-time-display {
  font-family: 'Roboto Flex', sans-serif;
  font-weight: 300;
  font-size: 0.65rem; /* Made smaller */
  fill: #666; /* Match baseline color */
  opacity: 0.7; /* Match baseline opacity */
  /* height, padding, color, etc. might need review if this class also styles a container div */
  /* For SVG text elements, fill and opacity are primary. Remove color if not needed for a wrapper. */
  height: 0.8rem; /* Adjusted from 1.2rem */
  padding: 0.1rem 0;
  align-items: center;
  display: flex;
  justify-content: space-between;
  position: absolute;
  bottom: 2px;
  left: 0;
  right: 0;
  background-color: transparent; /* Changed from semi-transparent gray */
}

/* Ensure SVG text elements inherit container color or have specific colors set if needed */
/*
.timeline-svg text {
  font-family: 'Source Sans Pro', sans-serif; / Default for other SVG text /
}
*/
/* Playhead time text specific styling if needed, already has fontFamily */
.playhead-time-text {
  fill: #8b2942; /* Burgundy for playhead elements */
  font-family: 'Roboto Flex', sans-serif;
  font-weight: 300;
  font-size: 0.65rem; /* Match static time display size */
  bottom: 0.4rem; /* Added based on task */
  opacity: 1; /* Default opacity */
}

.playhead-time-text.faded-out {
  opacity: 0;
}

.playhead-marker {
  color: #8b2942; /* Burgundy, same as playhead line and old circles */
  cursor: grab;
  opacity: 0.6;
  transition: opacity 0.2s ease-in-out, transform 0.2s ease-in-out; /* Added transform for potential scale effect */
}

.playhead-group.playhead-marker-active .playhead-marker {
  opacity: 0.7;
  /* Example: slightly scale up on active state */
  /* transform: scale(1.1); */ /* User can uncomment and customize this */
}

.playhead-group:hover .playhead-marker {
  opacity: 1;
}

/* Ensure the hit area still allows grabbing cursor */
.playhead-hitarea {
  cursor: grab;
}

.playhead-group.playhead-marker-active .playhead-hitarea {
  cursor: grabbing;
}

/* Transitions for snap animation */
.timeline-svg .playhead-group > line,
.timeline-svg .playhead-group > .playhead-marker, /* Targets PlayheadMarkerIcon by its class */
.timeline-svg .playhead-group > .playhead-time-text {
  transition: transform 0.15s ease-out, x 0.15s ease-out, x1 0.15s ease-out, x2 0.15s ease-out;
}

/* Specific transition for the playhead line's x1 and x2 attributes */
.timeline-svg .playhead-group > line {
  transition-property: x1, x2;
  transition-duration: 0.15s;
  transition-timing-function: ease-out;
}

/* Specific transition for elements moved with x attribute (like text and SVG icons) */
.timeline-svg .playhead-group > .playhead-marker, /* SVG icon */
.timeline-svg .playhead-group > .playhead-time-text { /* Text element */
  transition-property: x, opacity; /* Add opacity */
  transition-duration: 0.15s, 0.3s; /* Duration for x, duration for opacity */
  transition-timing-function: ease-out, ease-in-out; /* Timing for x, timing for opacity */
}